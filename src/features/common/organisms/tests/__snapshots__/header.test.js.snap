// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`must render Header 1`] = `
.c1 {
  -webkit-box-pack: initial;
  -webkit-justify-content: initial;
  -ms-flex-pack: initial;
  justify-content: initial;
  -webkit-align-items: initial;
  -webkit-box-align: initial;
  -ms-flex-align: initial;
  align-items: initial;
  -webkit-flex-wrap: initial;
  -ms-flex-wrap: initial;
  flex-wrap: initial;
  width: initial;
  height: initial;
  min-width: initial;
  max-width: initial;
  min-height: initial;
  max-height: initial;
  padding: initial;
  display: inherit;
  max-width: 50rem;
  width: 100%;
  padding: 1rem;
}

.c4 {
  position: relative;
  display: block;
  width: calc((1.4rem * 2) + 8px);
  height: calc(1.4rem + 8px);
}

.c8 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: var(--border);
  border-radius: 1.4rem;
  cursor: pointer;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  background-color: var(--primary);
}

.c8:before {
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 4px;
  left: 4px;
  width: 1.4rem;
  height: 1.4rem;
  font-size: calc(1.4rem / 2);
  line-height: 0px;
  background-color: white;
  border-radius: 50%;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.c8:before {
  content: '☀️';
}

.c5 {
  opacity: 0;
  width: 0;
  height: 0;
}

.c5:checked {
  -webkit-transform: translateX(1.4rem);
  -ms-transform: translateX(1.4rem);
  transform: translateX(1.4rem);
}

.c5:checked + .c6 {
  background-color: var(--primary);
}

.c5:checked + .c6::before {
  -webkit-transform: translateX(1.4rem);
  -ms-transform: translateX(1.4rem);
  transform: translateX(1.4rem);
}

.c5:checked + .c7::before {
  content: '🌙';
}

.c2 {
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: 0.15s;
  transition: 0.15s;
  color: inherit;
  font-size: inherit;
  outline: none;
  -webkit-box-pack: initial;
  -webkit-justify-content: initial;
  -ms-flex-pack: initial;
  justify-content: initial;
  -webkit-align-items: initial;
  -webkit-box-align: initial;
  -ms-flex-align: initial;
  align-items: initial;
  -webkit-flex-wrap: initial;
  -ms-flex-wrap: initial;
  flex-wrap: initial;
  width: initial;
  height: initial;
  min-width: initial;
  max-width: initial;
  min-height: initial;
  max-height: initial;
  padding: initial;
}

.c2:hover,
.c2:focus {
  color: var(--primary-hover);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 > :not(:first-child) {
  margin-left: 20px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 5rem;
  color: var(--canvas-text);
  background-color: var(--canvas);
}

.c0 > div.container {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  className="c0"
>
  <div
    className="container c1"
  >
    <h1>
      <a
        className="c2"
        href="/"
        onClick={[Function]}
        style={
          Object {
            "textTransform": "uppercase",
          }
        }
      >
        Shortcut-link
      </a>
    </h1>
    <div
      className="c3"
    >
      <a
        className="c2"
        href="/join"
        onClick={[Function]}
      >
        Login to account
      </a>
      <label
        className="c4"
        onKeyPress={[Function]}
        radius="1.4rem"
      >
        <input
          checked={false}
          className="c5"
          onChange={[Function]}
          radius="1.4rem"
          type="checkbox"
        />
        <span
          className="c6 slider c7 c8"
          radius="1.4rem"
        />
      </label>
    </div>
  </div>
</div>
`;
