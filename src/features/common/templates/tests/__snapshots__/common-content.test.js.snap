// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`must render Header with custom header, footer 1`] = `
.c0 {
  display: grid;
  min-height: 100vh;
  max-height: 100vh;
  grid-template-rows: auto 1fr auto;
  grid-template-areas: 'header' '.' 'footer';
}

.c1 {
  grid-area: header;
}

.c4 {
  grid-area: footer;
}

.c3 {
  -webkit-box-pack: initial;
  -webkit-justify-content: initial;
  -ms-flex-pack: initial;
  justify-content: initial;
  -webkit-align-items: initial;
  -webkit-box-align: initial;
  -ms-flex-align: initial;
  align-items: initial;
  -webkit-flex-wrap: initial;
  -ms-flex-wrap: initial;
  flex-wrap: initial;
  width: initial;
  min-width: initial;
  max-width: initial;
  padding: initial;
  display: inherit;
  max-width: 50rem;
  width: 100%;
  padding: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #ECEFF1;
  color: Black;
}

<div
  className="c0"
>
  <header
    className="c1"
  >
    <header>
      Header
    </header>
  </header>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div>
        Children
      </div>
    </div>
  </div>
  <footer
    className="c4"
  >
    <footer>
      Footer
    </footer>
  </footer>
</div>
`;

exports[`must render Header with default header, footer 1`] = `
.c0 {
  display: grid;
  min-height: 100vh;
  max-height: 100vh;
  grid-template-rows: auto 1fr auto;
  grid-template-areas: 'header' '.' 'footer';
}

.c1 {
  grid-area: header;
}

.c3 {
  -webkit-box-pack: initial;
  -webkit-justify-content: initial;
  -ms-flex-pack: initial;
  justify-content: initial;
  -webkit-align-items: initial;
  -webkit-box-align: initial;
  -ms-flex-align: initial;
  align-items: initial;
  -webkit-flex-wrap: initial;
  -ms-flex-wrap: initial;
  flex-wrap: initial;
  width: initial;
  min-width: initial;
  max-width: initial;
  padding: initial;
  display: inherit;
  max-width: 50rem;
  width: 100%;
  padding: 1rem;
}

.c6 {
  position: relative;
  display: block;
  width: calc((1.4rem * 2) + 8px);
  height: calc(1.4rem + 8px);
}

.c10 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0,0,0,0.12);
  border-radius: 1.4rem;
  cursor: pointer;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  background-color: #64B5F6;
}

.c10:before {
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 4px;
  left: 4px;
  width: 1.4rem;
  height: 1.4rem;
  font-size: calc(1.4rem / 2);
  line-height: 0px;
  background-color: white;
  border-radius: 50%;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.c10:before {
  content: '☀️';
}

.c7 {
  opacity: 0;
  width: 0;
  height: 0;
}

.c7:checked {
  -webkit-transform: translateX(1.4rem);
  -ms-transform: translateX(1.4rem);
  transform: translateX(1.4rem);
}

.c7:checked + .c8 {
  background-color: #64B5F6;
}

.c7:checked + .c8::before {
  -webkit-transform: translateX(1.4rem);
  -ms-transform: translateX(1.4rem);
  transform: translateX(1.4rem);
}

.c7:checked + .c9::before {
  content: '🌙';
}

.c4 {
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: 0.15s;
  transition: 0.15s;
  color: inherit;
  font-size: inherit;
  outline: none;
  -webkit-box-pack: initial;
  -webkit-justify-content: initial;
  -ms-flex-pack: initial;
  justify-content: initial;
  -webkit-align-items: initial;
  -webkit-box-align: initial;
  -ms-flex-align: initial;
  align-items: initial;
  -webkit-flex-wrap: initial;
  -ms-flex-wrap: initial;
  flex-wrap: initial;
  width: initial;
  min-width: initial;
  max-width: initial;
  padding: initial;
}

.c4:hover,
.c4:focus {
  color: #2196F3;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 > :not(:first-child) {
  margin-left: 20px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 5rem;
  background-color: #ECEFF1;
  color: Black;
}

.c2 > div.container {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #ECEFF1;
  color: Black;
}

<div
  className="c0"
>
  <header
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="container c3"
      >
        <h1>
          <a
            className="c4"
            href="/"
            onClick={[Function]}
            style={
              Object {
                "textTransform": "uppercase",
              }
            }
          >
            Shortcut-link
          </a>
        </h1>
        <div
          className="c5"
        >
          <a
            className="c4"
            href="/join"
            onClick={[Function]}
          >
            Login to account
          </a>
          <label
            className="c6"
            onKeyPress={[Function]}
            radius="1.4rem"
          >
            <input
              checked={false}
              className="c7"
              onChange={[Function]}
              radius="1.4rem"
              type="checkbox"
              value={false}
            />
            <span
              className="c8 slider c9 c10"
              radius="1.4rem"
            />
          </label>
        </div>
      </div>
    </div>
  </header>
  <div
    className="c11"
  >
    <div
      className="c3"
    >
      <div>
        Children
      </div>
    </div>
  </div>
</div>
`;
